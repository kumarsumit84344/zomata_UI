{"ast":null,"code":"import { NgForm } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nexport class LoginComponent {\n  constructor() {\n    this.loggedIn = false;\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)();\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 2,\n  vars: 0,\n  consts: [[\"mat-button\", \"\", 3, \"click\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_0_listener() {\n        return ctx.openDialog();\n      });\n      i0.ɵɵtext(1, \"Launch dialog\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nngOnInit();\n{\n  this.authService.authState.subscribe(user => {\n    this.user = user;\n    this.loggedIn = user != null;\n    this.loginstatus = this.loggedIn;\n    console.log(this.user);\n    console.log(this.loggedIn);\n  });\n  console.log(this.loginstatus);\n}\nonSubmit(value, NgForm);\n{\n  console.log(value.value);\n}","map":{"version":3,"mappings":"AAIA,SAASA,MAAM,QAAQ,gBAAgB;;AAQvC,OAAM,MAAOC,cAAc;EAL3BC;IASE,aAAQ,GAAU,KAAK;;;AAJZD,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAE;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCO3BC,iCAA0C;MAAvBA;QAAA,OAASC,gBAAY;MAAA,EAAC;MAACD,6BAAa;MAAAA,iBAAS;;;;;ADMhEE,QAAQ,EAAE;AAAC;EACP,IAAI,CAACC,WAAW,CAACC,SAAS,CAACC,SAAS,CAAEC,IAAI,IAAI;IAC5C,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,QAAQ,GAAID,IAAI,IAAI,IAAK;IAC9B,IAAI,CAACE,WAAW,GAAC,IAAI,CAACD,QAAQ;IAC9BE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,IAAI,CAAC;IACtBG,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,QAAQ,CAAC;EAE5B,CAAC,CAAC;EACJE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,WAAW,CAAC;;AAG7BG,QAAQ,CAACC,KAAK,EAAEpB,MAAM,CAAC;AAAC;EACtBiB,OAAO,CAACC,GAAG,CAACE,KAAK,CAACA,KAAK,CAAC","names":["NgForm","LoginComponent","constructor","selectors","decls","vars","consts","template","i0","ctx","ngOnInit","authService","authState","subscribe","user","loggedIn","loginstatus","console","log","onSubmit","value"],"sourceRoot":"","sources":["D:\\angular\\cloneZomato\\src\\app\\login\\login.component.ts","D:\\angular\\cloneZomato\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SocialAuthService } from \"@abacritt/angularx-social-login\";\nimport { FacebookLoginProvider } from \"@abacritt/angularx-social-login\";\nimport { NgForm } from '@angular/forms';\nimport {MatDialog} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\nemail: any;\npassword: any;\n  user: any;\n  loggedIn: boolean=false\n  loginstatus!: boolean;\n\n\n \n}\n\n  \n\nngOnInit() {\n    this.authService.authState.subscribe((user) => {\n      this.user = user;\n      this.loggedIn = (user != null);\n      this.loginstatus=this.loggedIn\n      console.log(this.user)\n      console.log(this.loggedIn)\n\n    });\n  console.log(this.loginstatus)\n   \n  }\n  onSubmit(value: NgForm) {\n    console.log(value.value)\n    \n  }\n \n\n","<!-- <form #login=\"ngForm\" (ngSubmit)=\"onSubmit(login)\">\n    <div>\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" name=\"email\" [(ngModel)]=\"email\">\n    </div>\n    <div>\n        <label for=\"password\">Password:</label>\n        <input type=\"password\" id=\"password\" name=\"password\" [(ngModel)]=\"password\">\n    </div>\n    <button type=\"submit\">Submit</button>\n</form>\n\n<asl-google-signin-button type='icon' size='medium'></asl-google-signin-button>\n\n<div *ngIf=\"user\">\n    <img src=\"{{user.photoUrl\n}}\" alt=\"\">\n</div> -->\n\n<button mat-button (click)=\"openDialog()\">Launch dialog</button>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}