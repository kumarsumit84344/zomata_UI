{"ast":null,"code":"import { DailogLoginComponent } from './dailog-login/dailog-login.component';\nimport { DailogSignupComponent } from './dailog-signup/dailog-signup.component';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nexport class MyserviceService {\n  constructor(dialog) {\n    this.dialog = dialog;\n    this.loginId = \"\";\n    this.cuser = false;\n    this.cpass = false;\n    this.loginstatus = false;\n    this.isTrueSubject = new BehaviorSubject(false);\n    this.isTrue$ = this.isTrueSubject.asObservable();\n  }\n  openDialog() {\n    this.dialog.open(DailogLoginComponent);\n  }\n  opensignupDialog() {\n    this.dialog.open(DailogSignupComponent);\n  }\n  check() {\n    this.loginId = localStorage.getItem(\"loginId\");\n    this.signupId = localStorage.getItem(\"SignupId\");\n    this.loginpass = localStorage.getItem(\"pass\");\n    this.signuppass = localStorage.getItem(\"Signuppass\");\n    this.cuser = this.loginId === this.signupId;\n    this.cpass = this.loginpass === this.signuppass;\n    if ((this.cuser && this.cpass) == true) {\n      this.loginstatus = true;\n    } else {\n      this.errormsg = \"wrong credential\";\n      this.loginstatus = false;\n    }\n  }\n  checkBooleanExpression(express) {\n    this.isTrueSubject.next(this.loginstatus);\n  }\n}\nMyserviceService.ɵfac = function MyserviceService_Factory(t) {\n  return new (t || MyserviceService)(i0.ɵɵinject(i1.MatDialog));\n};\nMyserviceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MyserviceService,\n  factory: MyserviceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,oBAAoB,QAAQ,uCAAuC;AAC5E,SAASC,qBAAqB,QAAQ,yCAAyC;AAE/E,SAASC,eAAe,QAAoB,MAAM;;;AAMlD,OAAM,MAAOC,gBAAgB;EAS3BC,YAAmBC,MAAiB;IAAjB,WAAM,GAANA,MAAM;IARzB,YAAO,GAAQ,EAAE;IAIjB,UAAK,GAAY,KAAK;IACtB,UAAK,GAAY,KAAK;IACtB,gBAAW,GAAY,KAAK;IAwCrB,kBAAa,GAAG,IAAIH,eAAe,CAAU,KAAK,CAAC;IAC1D,YAAO,GAAG,IAAI,CAACI,aAAa,CAACC,YAAY,EAAE;EAvCH;EAIxCC,UAAU;IACR,IAAI,CAACH,MAAM,CAACI,IAAI,CAACT,oBAAoB,CAAC;EAKxC;EACAU,gBAAgB;IACd,IAAI,CAACL,MAAM,CAACI,IAAI,CAACR,qBAAqB,CAAC;EAEzC;EAEAU,KAAK;IACH,IAAI,CAACC,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IAE9C,IAAI,CAACC,QAAQ,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAChD,IAAI,CAACE,SAAS,GAAGH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC7C,IAAI,CAACG,UAAU,GAAGJ,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAGpD,IAAI,CAACI,KAAK,GAAG,IAAI,CAACN,OAAO,KAAG,IAAI,CAACG,QAAQ;IACzC,IAAI,CAACI,KAAK,GAAG,IAAI,CAACH,SAAS,KAAK,IAAI,CAACC,UAAU;IAE/C,IAAI,CAAC,IAAI,CAACC,KAAK,IAAI,IAAI,CAACC,KAAK,KAAK,IAAI,EACtC;MACE,IAAI,CAACC,WAAW,GAAC,IAAI;KACtB,MACI;MACH,IAAI,CAACC,QAAQ,GAAG,kBAAkB;MAClC,IAAI,CAACD,WAAW,GAAC,KAAK;;EAIxB;EAIFE,sBAAsB,CAACC,OAAO;IAC5B,IAAI,CAACjB,aAAa,CAACkB,IAAI,CAAC,IAAI,CAACJ,WAAW,CAAC;EAE3C;;AArDWjB,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAsB,SAAhBtB,gBAAgB;EAAAuB,YAFf;AAAM","names":["DailogLoginComponent","DailogSignupComponent","BehaviorSubject","MyserviceService","constructor","dialog","isTrueSubject","asObservable","openDialog","open","opensignupDialog","check","loginId","localStorage","getItem","signupId","loginpass","signuppass","cuser","cpass","loginstatus","errormsg","checkBooleanExpression","express","next","factory","providedIn"],"sourceRoot":"","sources":["D:\\angular\\cloneZomato\\src\\app\\myservice.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { SocialAuthService } from '@abacritt/angularx-social-login';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DailogLoginComponent } from './dailog-login/dailog-login.component';\nimport { DailogSignupComponent } from './dailog-signup/dailog-signup.component';\nimport { UpperCasePipe } from '@angular/common';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyserviceService {\n  loginId: any = \"\"\n  signupId: any;\n  loginpass: any;\n  signuppass: any;\n  cuser: boolean = false;\n  cpass: boolean = false\n  loginstatus: boolean = false\n  errormsg: any;\n  constructor(public dialog: MatDialog) { }\n\n\n  \n  openDialog() {\n    this.dialog.open(DailogLoginComponent);\n  \n\n    \n  \n  }\n  opensignupDialog() {\n    this.dialog.open(DailogSignupComponent);\n \n  }\n  \n  check() {\n    this.loginId = localStorage.getItem(\"loginId\")\n    \n    this.signupId = localStorage.getItem(\"SignupId\")\n    this.loginpass = localStorage.getItem(\"pass\")\n    this.signuppass = localStorage.getItem(\"Signuppass\")\n\n    \n    this.cuser = this.loginId===this.signupId\n    this.cpass = this.loginpass === this.signuppass\n    \n    if ((this.cuser && this.cpass) == true)\n    {\n      this.loginstatus=true\n    }\n    else {\n      this.errormsg = \"wrong credential\"\n      this.loginstatus=false\n    }\n    \n    \n    }\n  public isTrueSubject = new BehaviorSubject<boolean>(false);\n  isTrue$ = this.isTrueSubject.asObservable();\n\n  checkBooleanExpression(express): void {\n    this.isTrueSubject.next(this.loginstatus);\n    \n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}