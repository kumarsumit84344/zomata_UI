{"ast":null,"code":"import { DailogLoginComponent } from './dailog-login/dailog-login.component';\nimport { DailogSignupComponent } from './dailog-signup/dailog-signup.component';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nexport class MyserviceService {\n  constructor(dialog) {\n    this.dialog = dialog;\n    this.loginId = \"\";\n    this.cuser = false;\n    this.cpass = false;\n    this.loginstatus = false;\n    this.data = new BehaviorSubject(false);\n    this.datachangeobservable = this.data.asObservable();\n    this.name = new BehaviorSubject(\"\");\n    this.namechangeobservable = this.name.asObservable();\n  }\n  // checkData() {\n  //   this.data.next(this.loginstatus);\n  // }\n  updatedata(bool) {\n    this.data.next(bool);\n  }\n  updatename(value) {\n    this.name.next(value);\n  }\n  check() {\n    console.log('called');\n    this.loginId = localStorage.getItem(\"loginId\");\n    this.signupId = localStorage.getItem(\"SignupId\");\n    this.loginpass = localStorage.getItem(\"pass\");\n    this.signuppass = localStorage.getItem(\"Signuppass\");\n    this.username = JSOlocalStorage.getItem(\"Name\")?.toString();\n    this.username = this.username.replace(/['\"]+/g, '');\n    this.updatename(this.username);\n    this.cuser = this.loginId === this.signupId;\n    this.cpass = this.loginpass === this.signuppass;\n    if ((this.cuser && this.cpass) == true) {\n      this.updatedata(true);\n    } else {\n      this.errormsg = \"wrong credential\";\n      this.updatedata(false);\n    }\n  }\n  openDialog() {\n    this.dialog.open(DailogLoginComponent);\n  }\n  opensignupDialog() {\n    this.dialog.open(DailogSignupComponent);\n  }\n}\nMyserviceService.ɵfac = function MyserviceService_Factory(t) {\n  return new (t || MyserviceService)(i0.ɵɵinject(i1.MatDialog));\n};\nMyserviceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MyserviceService,\n  factory: MyserviceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,oBAAoB,QAAQ,uCAAuC;AAC5E,SAASC,qBAAqB,QAAQ,yCAAyC;AAE/E,SAASC,eAAe,QAAoB,MAAM;;;AAMlD,OAAM,MAAOC,gBAAgB;EAc3BC,YAAmBC,MAAiB;IAAjB,WAAM,GAANA,MAAM;IAZzB,YAAO,GAAQ,EAAE;IAIjB,UAAK,GAAY,KAAK;IACtB,UAAK,GAAY,KAAK;IACd,gBAAW,GAAY,KAAK;IAUpC,SAAI,GAAG,IAAIH,eAAe,CAAM,KAAK,CAAC;IACtC,yBAAoB,GAAoB,IAAI,CAACI,IAAI,CAACC,YAAY,EAAE;IAChE,SAAI,GAAE,IAAIL,eAAe,CAAM,EAAE,CAAC;IAClC,yBAAoB,GAAoB,IAAI,CAACM,IAAI,CAACD,YAAY,EAAE;EAPxB;EAWxC;EACA;EACA;EACAE,UAAU,CAACC,IAAa;IACtB,IAAI,CAACJ,IAAI,CAACK,IAAI,CAACD,IAAI,CAAC;EACtB;EACAE,UAAU,CAACC,KAAU;IACnB,IAAI,CAACL,IAAI,CAACG,IAAI,CAACE,KAAK,CAAC;EACvB;EAGAC,KAAK;IACHC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrB,IAAI,CAACC,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IAE9C,IAAI,CAACC,QAAQ,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAChD,IAAI,CAACE,SAAS,GAAGH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC7C,IAAI,CAACG,UAAU,GAAGJ,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IACpD,IAAI,CAACI,QAAQ,GAAGC,eAAe,CAACL,OAAO,CAAC,MAAM,CAAC,EAAEM,QAAQ,EAAE;IAC3D,IAAI,CAACF,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACG,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;IACnD,IAAI,CAACd,UAAU,CAAC,IAAI,CAACW,QAAQ,CAAC;IAC9B,IAAI,CAACI,KAAK,GAAG,IAAI,CAACV,OAAO,KAAG,IAAI,CAACG,QAAQ;IACzC,IAAI,CAACQ,KAAK,GAAG,IAAI,CAACP,SAAS,KAAK,IAAI,CAACC,UAAU;IAG/C,IAAI,CAAC,IAAI,CAACK,KAAK,IAAI,IAAI,CAACC,KAAK,KAAK,IAAI,EACtC;MACE,IAAI,CAACnB,UAAU,CAAC,IAAI,CAAC;KACtB,MACI;MACH,IAAI,CAACoB,QAAQ,GAAG,kBAAkB;MAClC,IAAI,CAACpB,UAAU,CAAC,KAAK,CAAC;;EAK1B;EAGAqB,UAAU;IACR,IAAI,CAACzB,MAAM,CAAC0B,IAAI,CAAC/B,oBAAoB,CAAC;EAKxC;EACAgC,gBAAgB;IACd,IAAI,CAAC3B,MAAM,CAAC0B,IAAI,CAAC9B,qBAAqB,CAAC;EAEzC;;AA1EWE,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAA8B,SAAhB9B,gBAAgB;EAAA+B,YAFf;AAAM","names":["DailogLoginComponent","DailogSignupComponent","BehaviorSubject","MyserviceService","constructor","dialog","data","asObservable","name","updatedata","bool","next","updatename","value","check","console","log","loginId","localStorage","getItem","signupId","loginpass","signuppass","username","JSOlocalStorage","toString","replace","cuser","cpass","errormsg","openDialog","open","opensignupDialog","factory","providedIn"],"sourceRoot":"","sources":["D:\\angular\\cloneZomato\\src\\app\\myservice.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { SocialAuthService } from '@abacritt/angularx-social-login';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DailogLoginComponent } from './dailog-login/dailog-login.component';\nimport { DailogSignupComponent } from './dailog-signup/dailog-signup.component';\nimport { UpperCasePipe } from '@angular/common';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyserviceService {\n  \n  loginId: any = \"\"\n  signupId: any;\n  loginpass: any;\n  signuppass: any;\n  cuser: boolean = false;\n  cpass: boolean = false\n  private loginstatus: boolean = false\n  errormsg: any;\n  username: any;\n  \n  \n\n  constructor(public dialog: MatDialog) { }\n\n\n  \n  data = new BehaviorSubject<any>(false);\n  datachangeobservable: Observable<any> = this.data.asObservable();\n  name= new BehaviorSubject<any>(\"\");\n  namechangeobservable: Observable<any> = this.name.asObservable();\n \n \n  \n  // checkData() {\n  //   this.data.next(this.loginstatus);\n  // }\n  updatedata(bool: boolean) {\n    this.data.next(bool);\n  }\n  updatename(value: any) {\n    this.name.next(value)\n  }\n  \n  \n  check() {\n    console.log('called')\n    this.loginId = localStorage.getItem(\"loginId\")\n    \n    this.signupId = localStorage.getItem(\"SignupId\")\n    this.loginpass = localStorage.getItem(\"pass\")\n    this.signuppass = localStorage.getItem(\"Signuppass\")\n    this.username = JSOlocalStorage.getItem(\"Name\")?.toString()\n    this.username = this.username.replace(/['\"]+/g, '');\n    this.updatename(this.username)\n    this.cuser = this.loginId===this.signupId\n    this.cpass = this.loginpass === this.signuppass\n    \n    \n    if ((this.cuser && this.cpass) == true)\n    {\n      this.updatedata(true)\n    }\n    else {\n      this.errormsg = \"wrong credential\"\n      this.updatedata(false)\n      \n    }\n    \n    \n  }\n \n  \n  openDialog() {\n    this.dialog.open(DailogLoginComponent);\n  \n  \n    \n  \n  }\n  opensignupDialog() {\n    this.dialog.open(DailogSignupComponent);\n  \n  }\n  \n}\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}